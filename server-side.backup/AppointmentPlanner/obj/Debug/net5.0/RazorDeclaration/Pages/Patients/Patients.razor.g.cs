// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace AppointmentPlanner.Pages.Patients
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\pawel\Source\Repos\plipowczan\blazor-showcase-appointment-planner\server-side.backup\AppointmentPlanner\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\pawel\Source\Repos\plipowczan\blazor-showcase-appointment-planner\server-side.backup\AppointmentPlanner\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\pawel\Source\Repos\plipowczan\blazor-showcase-appointment-planner\server-side.backup\AppointmentPlanner\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\pawel\Source\Repos\plipowczan\blazor-showcase-appointment-planner\server-side.backup\AppointmentPlanner\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\pawel\Source\Repos\plipowczan\blazor-showcase-appointment-planner\server-side.backup\AppointmentPlanner\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\pawel\Source\Repos\plipowczan\blazor-showcase-appointment-planner\server-side.backup\AppointmentPlanner\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\pawel\Source\Repos\plipowczan\blazor-showcase-appointment-planner\server-side.backup\AppointmentPlanner\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\pawel\Source\Repos\plipowczan\blazor-showcase-appointment-planner\server-side.backup\AppointmentPlanner\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\pawel\Source\Repos\plipowczan\blazor-showcase-appointment-planner\server-side.backup\AppointmentPlanner\_Imports.razor"
using AppointmentPlanner;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\pawel\Source\Repos\plipowczan\blazor-showcase-appointment-planner\server-side.backup\AppointmentPlanner\_Imports.razor"
using AppointmentPlanner.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\pawel\Source\Repos\plipowczan\blazor-showcase-appointment-planner\server-side.backup\AppointmentPlanner\_Imports.razor"
using Syncfusion.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\pawel\Source\Repos\plipowczan\blazor-showcase-appointment-planner\server-side.backup\AppointmentPlanner\_Imports.razor"
using Syncfusion.Blazor.Inputs;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\pawel\Source\Repos\plipowczan\blazor-showcase-appointment-planner\server-side.backup\AppointmentPlanner\_Imports.razor"
using Syncfusion.Blazor.Popups;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Users\pawel\Source\Repos\plipowczan\blazor-showcase-appointment-planner\server-side.backup\AppointmentPlanner\_Imports.razor"
using Syncfusion.Blazor.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "C:\Users\pawel\Source\Repos\plipowczan\blazor-showcase-appointment-planner\server-side.backup\AppointmentPlanner\_Imports.razor"
using Syncfusion.Blazor.DropDowns;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "C:\Users\pawel\Source\Repos\plipowczan\blazor-showcase-appointment-planner\server-side.backup\AppointmentPlanner\_Imports.razor"
using Syncfusion.Blazor.Calendars;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "C:\Users\pawel\Source\Repos\plipowczan\blazor-showcase-appointment-planner\server-side.backup\AppointmentPlanner\_Imports.razor"
using Syncfusion.Blazor.Navigations;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "C:\Users\pawel\Source\Repos\plipowczan\blazor-showcase-appointment-planner\server-side.backup\AppointmentPlanner\_Imports.razor"
using Syncfusion.Blazor.Lists;

#line default
#line hidden
#nullable disable
#nullable restore
#line 19 "C:\Users\pawel\Source\Repos\plipowczan\blazor-showcase-appointment-planner\server-side.backup\AppointmentPlanner\_Imports.razor"
using Syncfusion.Blazor.Schedule;

#line default
#line hidden
#nullable disable
#nullable restore
#line 20 "C:\Users\pawel\Source\Repos\plipowczan\blazor-showcase-appointment-planner\server-side.backup\AppointmentPlanner\_Imports.razor"
using Syncfusion.Blazor.Grids;

#line default
#line hidden
#nullable disable
#nullable restore
#line 21 "C:\Users\pawel\Source\Repos\plipowczan\blazor-showcase-appointment-planner\server-side.backup\AppointmentPlanner\_Imports.razor"
using Syncfusion.Blazor.Charts;

#line default
#line hidden
#nullable disable
#nullable restore
#line 22 "C:\Users\pawel\Source\Repos\plipowczan\blazor-showcase-appointment-planner\server-side.backup\AppointmentPlanner\_Imports.razor"
using Syncfusion.Blazor.Buttons;

#line default
#line hidden
#nullable disable
#nullable restore
#line 23 "C:\Users\pawel\Source\Repos\plipowczan\blazor-showcase-appointment-planner\server-side.backup\AppointmentPlanner\_Imports.razor"
using Syncfusion.Blazor.SplitButtons;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\pawel\Source\Repos\plipowczan\blazor-showcase-appointment-planner\server-side.backup\AppointmentPlanner\Pages\Patients\Patients.razor"
using AppointmentPlanner.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\pawel\Source\Repos\plipowczan\blazor-showcase-appointment-planner\server-side.backup\AppointmentPlanner\Pages\Patients\Patients.razor"
using AppointmentPlanner.Models;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.LayoutAttribute(typeof(MainLayout))]
    [Microsoft.AspNetCore.Components.RouteAttribute("/patients")]
    public partial class Patients : Microsoft.AspNetCore.Components.ComponentBase, IDisposable
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 180 "C:\Users\pawel\Source\Repos\plipowczan\blazor-showcase-appointment-planner\server-side.backup\AppointmentPlanner\Pages\Patients\Patients.razor"
      
    [Inject]
    protected AppointmentService Service { get; set; }
    SfGrid<Patient> gridObj;
    SfDialog dialogObj, gridEditDialogObj;

    private string searchValue { get; set; }
    private SfMaskedTextBox maskObj { get; set; }

    private Patient patientEditModel { get; set; }
    private List<Patient> filteredPatients { get; set; }

    private string saveButton { get; set; } = "Save";

    private List<Hospital> historyData { get; set; }
    private bool isPatientClicked { get; set; } = false;
    private bool isConfirmDelete { get; set; }

    private Patient activePatientData { get; set; }

    private bool IsShowPatientEditDialog { get; set; } = false;
    private bool showGridEditDialog { get; set; } = false;
    private string patientHeader { get; set; }
    private string gridEditHeader { get; set; } = "Patient Details";

    private List<TextValueData> bloodGroupData { get; set; }

    private DateTime? dobValue { get; set; } = DateTime.Now;
    private List<Doctor> doctorsData { get; set; }
    public Patient EditData { get; set; }
    protected override void OnInitialized()
    {
        filteredPatients = Service.Patients;
        this.bloodGroupData = Service.BloodGroups;
        this.doctorsData = Service.Doctors;
        this.EditData = Service.Patients[0];
        this.patientEditModel = new Patient();
    }

    private void onAddPatient(Microsoft.AspNetCore.Components.Web.MouseEventArgs args)
    {
        saveButton = "Save";
        patientEditModel = new Patient { Name = null, Gender = "Male", DOB= new DateTime(1996, 1, 31), BloodGroup = "B +ve", Mobile = null, Email = null, Symptoms = null };
        this.patientHeader = "New Patient";
        this.IsShowPatientEditDialog = true;
    }
    private async Task onCancelClick(Microsoft.AspNetCore.Components.Web.MouseEventArgs args)
    {
        await this.dialogObj.Hide();
    }
    public async Task HandleValidSubmit()
    {
        Patient getRecord = null;
        string message = "";
        string name = "";
        string mobileNo = this.maskObj.GetMaskedValue();
        if (saveButton == "Save")
        {
            getRecord = new Patient(Service.Patients.LastOrDefault().Id + 1, patientEditModel.Name, patientEditModel.Name, patientEditModel.DOB, mobileNo, patientEditModel.Email, Service.Patients[0].Address, Service.Patients[0].Disease, Service.Patients[0].DepartmentName, patientEditModel.BloodGroup, patientEditModel.Gender, patientEditModel.Symptoms);
            await gridObj.AddRecord(getRecord, Service.Patients.Count());
            filteredPatients = Service.Patients;
            message = " " + getRecord.Name + " for " + getRecord.Symptoms;
            name = "Added New Patient";
        }
        else
        {
            getRecord = new Patient(activePatientData.Id, patientEditModel.Name, patientEditModel.Name, patientEditModel.DOB, mobileNo, patientEditModel.Email, activePatientData.Address, activePatientData.Disease, activePatientData.DepartmentName, patientEditModel.BloodGroup, patientEditModel.Gender, patientEditModel.Symptoms);
            await gridObj.UpdateRow((activePatientData.Id - 1), getRecord);
            message = " " + getRecord.Name + " for " + getRecord.Symptoms;
            name = "Updated Patient";
        }
        Service.Activities.Insert(0, new Activity { Name = name, Message = message, Time = "10 mins ago", Type = "patient", ActivityTime = DateTime.Now });
        await this.dialogObj.Hide();
    }

    public void onRowSelected(RowSelectEventArgs<Patient> args)
    {
        if (isPatientClicked)
        {
            this.showDialog(args.Data);
            this.isPatientClicked = false;
        }
    }
    public void onDoubleClick(RecordDoubleClickEventArgs<Patient> args)
    {
        this.showDialog(args.RowData);
    }
    private void showDialog(Patient data)
    {
        saveButton = "Update";
        showGridEditDialog = true;
        Service.ActivePatients = activePatientData = data;
        historyData = Service.Hospitals.Where(item => item.PatientId.Equals(data.Id)).ToList();
    }

    private void onDeleteClick()
    {
        this.isConfirmDelete = true;
    }

    private void hideGridEditDialog()
    {
        showGridEditDialog = false;
        patientEditModel = new Patient { Name = activePatientData.Name, Gender = activePatientData.Gender, Mobile = activePatientData.Mobile, Email = activePatientData.Email, Symptoms = activePatientData.Symptoms, BloodGroup = activePatientData.BloodGroup, DOB = activePatientData.DOB };
        this.patientHeader = "Edit Patient";
        this.IsShowPatientEditDialog = true;
    }

    private async Task onPatientClick(Microsoft.AspNetCore.Components.Web.MouseEventArgs args, int Id)
    {
        await this.gridObj.SelectRow(Id - 1);
        this.isPatientClicked = true;
        this.showGridEditDialog = true;
    }

    private void patientSearch(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        var patientData = Service.Patients;
        this.filteredPatients = (from cust in patientData
                                 where (cust.Name.Contains(args.Value.ToString(), StringComparison.OrdinalIgnoreCase)) || (cust.Gender.Contains(args.Value.ToString(), StringComparison.OrdinalIgnoreCase)) || (cust.Email.Contains(args.Value.ToString(), StringComparison.OrdinalIgnoreCase)) || (cust.Id.ToString().Contains(args.Value.ToString(), StringComparison.OrdinalIgnoreCase)) || (cust.Mobile.Contains(args.Value.ToString(), StringComparison.OrdinalIgnoreCase)) || ((cust.BloodGroup as string).Contains(args.Value.ToString(), StringComparison.OrdinalIgnoreCase))
                                 select cust).ToList();
    }

    private string getHistoryFormatDate(Hospital data)
    {
        return Service.GetFormatDate(data.StartTime, "MMMM dd") + "-" + Service.GetFormatDate(data.StartTime, "hh:mm tt") + "-" + Service.GetFormatDate(data.EndTime, "hh:mm tt") + " Appointment with Dr." + getDoctorName(data.DoctorId);
    }

    private string getDoctorName(int Id)
    {
        return doctorsData.Where(item => item.Id.Equals(Id)).FirstOrDefault().Name;
    }

    private void clearText()
    {
        this.searchValue = "";
        this.filteredPatients = Service.Patients;
    }

    private async Task DeleteBtnClick()
    {
        Service.Patients = filteredPatients = ((List<Patient>)filteredPatients).Where(item => item.Id != activePatientData.Id).ToList();
        Service.WaitingLists = Service.WaitingLists.Where(item => item.PatientId != activePatientData.Id).ToList();
        var deleteData = ((List<Patient>)filteredPatients).Where(item => item.Id == activePatientData.Id).FirstOrDefault();
        await this.gridObj.DeleteRecord(null, deleteData);
        this.isConfirmDelete = false;

        this.showGridEditDialog = false;
        this.IsShowPatientEditDialog = false;
    }
    private void CancelBtnClick()
    {
        this.isConfirmDelete = false;
    }

    public void Dispose()
    {
        gridObj = null;
        gridEditDialogObj = null;
        dialogObj = null;
        maskObj = null;
    }


#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
